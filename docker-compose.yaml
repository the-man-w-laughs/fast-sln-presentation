version: '3.4'

services:  
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "tasks"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      timeout: 20s
      retries: 10

  frontend:
    container_name: react-client
    image: reactfrontend
    build:
      context: front-end
      dockerfile: ./Dockerfile
    volumes:
       - ./front-end:/front-end:delegated
       - ./front-end/node_modules:/front-end/node_modules
    environment:
      NODE_ENV: development
       - CHOKIDAR_USEPOLLING=true
    ports:
      - 3000:3000  
    depends_on:
      - backend 
    restart: always   

  backend:
    container_name: aspnet-webapi
    depends_on:
      - postgres      
    image: aspnet-webapi
    build:
      context: .
      dockerfile: Back-end/FastSlnPresentation.Server/Dockerfile
      args:
        - configuration=Debug
    ports:
      - 5137:5137      
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    volumes:
      - ~/.vsdbg:/remote_debugger:rw
      - ./keys/signing_key.pfx:/app/signing_key.pfx
    restart: always
